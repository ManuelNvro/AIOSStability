#1
char Aclass(3,24)
Adymosim
1.4
Modelica experiment file


#    Experiment parameters
double experiment(7,1)
       0                   # StartTime    Time at which integration starts
                           #              (and linearization and trimming time)
       0                   # StopTime     Time at which integration stops
       0                   # Increment    Communication step size, if > 0
     100                   # nInterval    Number of communication intervals, if > 0
  1.0000000000000000E-04   # Tolerance    Relative precision of signals for
                           #              simulation, linearization and trimming
       0                   # MaxFixedStep Maximum step size of fixed step size
                           #              integrators, if > 0.0
       4                   # Algorithm    Integration algorithm as integer (1...28)
                           #
                           #             | model|       |        | dense | state |
                           # Algorithm   | typ  | stiff | order  | output| event |
                           # ------------+------+-------+--------+-------+-------+
                           #  1 | deabm  |  ode |   no  |  1-12  |  yes  |   no  |
                           #  2 | lsode1 |  ode |   no  |  1-12  |  yes  |   no  |
                           #  3 | lsode2 |  ode |  yes  |  1-5   |  yes  |   no  |
                           #  4 | lsodar |  ode |  both |1-12,1-5|  yes  |  yes  |
                           #  5 | dopri5 |  ode |   no  |   5    |   no  |   no  |
                           #  6 | dopri8 |  ode |   no  |   8    |   no  |   no  |
                           #  7 | grk4t  |  ode |  yes  |   4    |   no  |   no  |
                           #  8 | dassl  |  dae |  yes  |  1-5   |  yes  |  yes  |
                           #  9 | odassl | hdae |  yes  |  1-5   |  yes  |  yes  |
                           # 10 | mexx   | hdae |   no  |  2-24  |   no  |   no  |
                           # 11 | euler  |  ode |   no  |   1    |   no  |  yes  |
                           # 12 | rkfix2 |  ode |   no  |   2    |   no  |  yes  |
                           # 13 | rkfix3 |  ode |   no  |   3    |   no  |  yes  |
                           # 14 | rkfix4 |  ode |   no  |   4    |   no  |  yes  |
                           #>=14| others |  ode |yes/no |  2-5   |   yes |  yes  |
                           # ---+--------+------+-------+--------+-------+-------+
                           # euler and rkfix have fixed stepsize.


#    Method tuning parameters
double method(27,1)
       1                   # grid     type of communication time grid, defined by
                           #          = 1: equidistant points ("Increment/nInterval")
                           #          = 2: vector of grid points ("tgrid")
                           #          = 3: variable step integrator (automatically)
                           #          = 4: model (call of "increment" in Dymola, e.g.
                           #                      incr=Time > 2 then 0 else 0.1
                           #                      dummy=increment(incr))
                           #          grid = 1,3 is stopped by "StopTime"
                           #          grid = 2   is stopped by "tgrid(last)"
                           #          grid = 4   runs forever (stopped by model)
       1                   # nt       Use every NT time instant, if grid = 3
       3                   # dense    1/2/3 restart/step/interpolate GRID points
       1                   # evgrid   0/1 do not/save event points in comm. time grid
       1                   # evu      0/1 U-discontinuity does not/trigger events
       0                   # evuord       U-discontinuity order to consider (0,1,...)
       0                   # error    0/1/2 One message/warning/error messages
       0                   # jac      0/1 Compute jacobian numerically/by BLOCKJ
       0                   # xd0c     0/1 Compute/set XD0
       0                   # f3       0/1 Ignore/use F3 of HDAE (= index 1)
       0                   # f4       0/1 Ignore/use F4 of HDAE (= index 2)
       0                   # f5       0/1 Ignore/use F5 of HDAE (= invar.)
       0                   # debug    flags for debug information (1<<0 uses pdebug) 
     100                   # pdebug       priority of debug information (1...100)
       0                   # fmax     Maximum number of evaluations of BLOCKF, if > 0
       0                   # ordmax   Maximum allowed integration order, if > 0
       0                   # hmax     Maximum absolute stepsize, if > 0
       0                   # hmin     Minimum absolute stepsize, if > 0 (use with care!)
       0                   # h0       Stepsize to be attempted on first step, if > 0
  9.9999999999999998E-13   # teps     Bound to check, if 2 equal time instants
  1.0000000000000000E-10   # eveps    Hysteresis epsilon at event points
      20                   # eviter   Maximum number of event iterations
       0                   # delaym   Minimum time increment in delay buffers
       1                   # fexcep   0/1 floating exception crashes/stops dymosim
       1                   # tscale   clock-time = tscale*simulation-time, if grid = 5
                           #          > 1: simulation too slow
                           #          = 1: simulation-time = real-time
                           #          < 1: simulation too fast
       1                   # shared   (not used)
    2473                   # memkey   (not used)


#    Output parameters
int settings(13,1)
 0                         # lprec    0/1 do not/store result data in double
 1                         # lx       0/1 do not/store x  (state variables)
 1                         # lxd      0/1 do not/store xd (derivative of states)
 1                         # lu       0/1 do not/store u  (input     signals)
 1                         # ly       0/1 do not/store y  (output    signals)
 0                         # lz       0/1 do not/store z  (indicator signals)
 1                         # lw       0/1 do not/store w  (auxiliary signals)
 1                         # la       0/1 do not/store a  (alias     signals)
 0                         # lperf    0/1 do not/store performance indicators
 0                         # levent   0/1 do not/store event point
 1                         # lres     0/1 do not/store results on result file
 0                         # lshare   0/1 do not/store info data for shared memory on dsshare.txt
 1                         # lform    0/1 ASCII/Matlab-binary storage format of results
                           #              (for simulation/linearization; not for trimming)


#    Names of initial variables
char initialName(214,38)
SysData.S_b
SysData.fn
pwPin.vr
pwPin.vi
pwPin.ir
pwPin.ii
V_b
V_0
angle_0
P_0
Q_0
M_b
avr2.v
avr2.vf
avr2.vref
avr2.vrmin
avr2.vrmax
avr2.Ka
avr2.Ta
avr2.Kf
avr2.Tf
avr2.Ke
avr2.Te
avr2.Tr
avr2.Ae
avr2.Be
avr2.v0
avr2.vfstate
avr2.vf00
avr2.vr10
avr2.vr20
avr2.vref0
avr2.vf0
avr2.feedback.u1
avr2.feedback.u2
avr2.feedback.y
avr2.ExcitationSystem.b[1]
avr2.ExcitationSystem.a[1]
avr2.ExcitationSystem.a[2]
avr2.ExcitationSystem.initType
avr2.ExcitationSystem.x_start[1]
avr2.ExcitationSystem.y_start
avr2.ExcitationSystem.x[1]
avr2.ExcitationSystem.na
avr2.ExcitationSystem.nb
avr2.ExcitationSystem.nx
avr2.ExcitationSystem.bb[1]
avr2.ExcitationSystem.bb[2]
avr2.ExcitationSystem.d
avr2.ExcitationSystem.a_end
avr2.ExcitationSystem.x_scaled[1]
avr2.ExcitationSystem.der(x_scaled[1])
avr2.ceilingBlock.Ae
avr2.ceilingBlock.Be
avr2.derivativeBlock.k
avr2.derivativeBlock.T
avr2.derivativeBlock.initType
avr2.derivativeBlock.x_start
avr2.derivativeBlock.y_start
avr2.derivativeBlock.y
avr2.derivativeBlock.x
avr2.derivativeBlock.der(x)
avr2.derivativeBlock.zeroGain
avr2.feedback1.u1
avr2.firstOrder2.k
avr2.firstOrder2.T
avr2.firstOrder2.initType
avr2.firstOrder2.y_start
avr2.firstOrder2.y
avr2.firstOrder2.der(y)
avr2.simpleLagLim.u
avr2.simpleLagLim.state
avr2.simpleLagLim.der(state)
avr2.simpleLagLim.K
avr2.simpleLagLim.T
avr2.simpleLagLim.y_start
avr2.simpleLagLim.outMax
avr2.simpleLagLim.outMin
avr2.simpleLagLim.T_mod
oel.p
oel.q
oel.field_current.p
oel.field_current.q
oel.field_current.ifield
oel.field_current.xd
oel.field_current.xq
oel.field_current.gamma_p
oel.field_current.gamma_q
oel.T0
oel.xd
oel.xq
oel.if_lim
oel.vOEL_max
oel.Sn
oel.Vn
oel.V_b
oel.Z_MBtoSB
oel.I_MBtoSB
oel.add.y
oel.currentLimit.k
oel.limIntegrator.k
oel.limIntegrator.outMax
oel.limIntegrator.outMin
oel.limIntegrator.initType
oel.limIntegrator.limitsAtInit
oel.limIntegrator.y_start
oel.limIntegrator.strict
oel.limIntegrator.y
oel.limIntegrator.der(y)
tGTypeI.pm
tGTypeI.wref
tGTypeI.pref
tGTypeI.R
tGTypeI.pmax
tGTypeI.pmin
tGTypeI.Ts
tGTypeI.Tc
tGTypeI.T3
tGTypeI.T4
tGTypeI.T5
tGTypeI.pin
tGTypeI.pin0
tGTypeI.xg10
tGTypeI.xg20
tGTypeI.xg30
tGTypeI.pinstar
tGTypeI.xg1
tGTypeI.der(xg1)
tGTypeI.xg2
tGTypeI.der(xg2)
tGTypeI.xg3
tGTypeI.der(xg3)
p0
order6_1.V_b
order6_1.V_0
order6_1.angle_0
order6_1.P_0
order6_1.Q_0
order6_1.S_b
order6_1.fn
order6_1.Sn
order6_1.Vn
order6_1.ra
order6_1.x1d
order6_1.M
order6_1.D
order6_1.p.ir
order6_1.p.ii
order6_1.delta
order6_1.der(delta)
order6_1.w
order6_1.der(w)
order6_1.P
order6_1.Q
order6_1.anglev
order6_1.vd
order6_1.vq
order6_1.id
order6_1.iq
order6_1.pe
order6_1.vf_MB
order6_1.w_b
order6_1.S_SBtoMB
order6_1.I_MBtoSB
order6_1.V_MBtoSB
order6_1.Z_MBtoSB
order6_1.p0
order6_1.q0
order6_1.Vt0.re
order6_1.Vt0.im
order6_1.S0.re
order6_1.S0.im
order6_1.I0.re
order6_1.I0.im
order6_1.vr0
order6_1.vi0
order6_1.ir0
order6_1.ii0
order6_1.xq0
order6_1.delta0
order6_1.Vdq0.re
order6_1.Vdq0.im
order6_1.Idq0.re
order6_1.Idq0.im
order6_1.vd0
order6_1.vq0
order6_1.id0
order6_1.iq0
order6_1.pm00
order6_1.xd
order6_1.xq
order6_1.x1q
order6_1.x2d
order6_1.x2q
order6_1.T1d0
order6_1.T1q0
order6_1.T2d0
order6_1.T2q0
order6_1.Taa
order6_1.e1q
order6_1.der(e1q)
order6_1.e1d
order6_1.der(e1d)
order6_1.e2q
order6_1.der(e2q)
order6_1.e2d
order6_1.der(e2d)
order6_1.e2q0
order6_1.e2d0
order6_1.e1d0
order6_1.K1
order6_1.K2
order6_1.e1q0
order6_1.vf00

double initialValue(214,6)
 -1     750                       0                       0                
  1   280   # SysData.S_b
 -1      50                       0                       0                
  1   280   # SysData.fn
  0       0                       0                       0                
  6   260   # pwPin.vr
  0       0                       0                       0                
  6   260   # pwPin.vi
  0       0                       0                       0                
  6   388   # pwPin.ir
  0       0                       0                       0                
  6   388   # pwPin.ii
 -1     400                       0                       0                
  1   280   # V_b
 -1       1                       0                       0                
  1   280   # V_0
 -1       0                       0                       0                
  1   280   # angle_0
 -1       1                       0                       0                
  1   280   # P_0
 -1       0                       0                       0                
  1   280   # Q_0
 -1     460                       0                       0                
  1   280   # M_b
  0       0                       0                       0                
  6   256   # avr2.v
  0       0                       0                       0                
  6   256   # avr2.vf
  0       0                       0                       0                
  6   256   # avr2.vref
 -1      -5                       0                       0                
  1   280   # avr2.vrmin
 -1       5                       0                       0                
  1   280   # avr2.vrmax
 -1     400                       0                       0                
  1   280   # avr2.Ka
 -1  2.0000000000000001E-01       0                       0                
  1   280   # avr2.Ta
 -1  1.0000000000000000E-02       0                       0                
  1   280   # avr2.Kf
 -1  5.0000000000000001E-04       0                       0                
  1   280   # avr2.Tf
 -1       1                       0                       0                
  1   280   # avr2.Ke
 -1  1.0000000000000000E-04       0                       0                
  1   280   # avr2.Te
 -1  1.0000000000000000E-02       0                       0                
  1   280   # avr2.Tr
 -1       0                       0                       0                
  1   280   # avr2.Ae
 -1       1                       0                       0                
  1   280   # avr2.Be
  0       0                       0                       0                
  6   256   # avr2.v0
  0       0                       0                       0                
  6  1280   # avr2.vfstate
  0       0                       0                       0                
  6  1280   # avr2.vf00
  0       0                       0                       0                
  6  1280   # avr2.vr10
  0       0                       0                       0                
  6  1280   # avr2.vr20
  0       0                       0                       0                
  6   256   # avr2.vref0
  0       0                       0                       0                
  6   256   # avr2.vf0
  0       0                       0                       0                
  6   256   # avr2.feedback.u1
  0       0                       0                       0                
  6   256   # avr2.feedback.u2
  0       0                       0                       0                
  6   256   # avr2.feedback.y
 -1       1                       0                       0                
  1   280   # avr2.ExcitationSystem.b[1]
  0       0                       0                       0                
  6   256   # avr2.ExcitationSystem.a[1]
  0       0                       0                       0                
  6   256   # avr2.ExcitationSystem.a[2]
  0       4                       1                       4                
  6   258   # avr2.ExcitationSystem.initType
  0       0                       0                       0                
  6   256   # avr2.ExcitationSystem.x_start[1]
  0       0                       0                       0                
  6   256   # avr2.ExcitationSystem.y_start
  0       0                       0                       0                
  6   256   # avr2.ExcitationSystem.x[1]
  0       2                       0                       0                
  6  1282   # avr2.ExcitationSystem.na
  0       1                       0                       0                
  6  1282   # avr2.ExcitationSystem.nb
  0       1                       0                       0                
  6  1282   # avr2.ExcitationSystem.nx
  0       0                       0                       0                
  6  1280   # avr2.ExcitationSystem.bb[1]
  0       0                       0                       0                
  6  1280   # avr2.ExcitationSystem.bb[2]
  0       0                       0                       0                
  6  1280   # avr2.ExcitationSystem.d
  0       0                       0                       0                
  6  1280   # avr2.ExcitationSystem.a_end
 -1       0                       0                       0                
  2  1296   # avr2.ExcitationSystem.x_scaled[1]
  0       0                       0                       0                
  3  1280   # avr2.ExcitationSystem.der(x_scaled[1])
  0       0                       0                       0                
  6   256   # avr2.ceilingBlock.Ae
  0       0                       0                       0                
  6   256   # avr2.ceilingBlock.Be
  0       0                       0                       0                
  6   256   # avr2.derivativeBlock.k
  0  9.9999999999999997E-61  9.9999999999999997E-61 1.0000000000000000E+100
  6   256   # avr2.derivativeBlock.T
  0       2                       1                       4                
  6   258   # avr2.derivativeBlock.initType
  0       0                       0                       0                
  6   256   # avr2.derivativeBlock.x_start
 -1       0                       0                       0                
  1   280   # avr2.derivativeBlock.y_start
  0       0                       0                       0                
  6   256   # avr2.derivativeBlock.y
 -1       0                       0                       0                
  2   272   # avr2.derivativeBlock.x
  0       0                       0                       0                
  3   256   # avr2.derivativeBlock.der(x)
  0       0                       0                       0                
  6  1281   # avr2.derivativeBlock.zeroGain
  0       0                       0                       0                
  6   256   # avr2.feedback1.u1
 -1       1                       0                       0                
  1   280   # avr2.firstOrder2.k
  0       1                       0                       0                
  6   256   # avr2.firstOrder2.T
  0       2                       1                       4                
  6   258   # avr2.firstOrder2.initType
  0       0                       0                       0                
  6   256   # avr2.firstOrder2.y_start
 -1       0                       0                       0                
  2   272   # avr2.firstOrder2.y
  0       0                       0                       0                
  3   256   # avr2.firstOrder2.der(y)
  0       0                       0                       0                
  6   256   # avr2.simpleLagLim.u
 -1       0                       0                       0                
  2   272   # avr2.simpleLagLim.state
  0       0                       0                       0                
  3   256   # avr2.simpleLagLim.der(state)
  0       0                       0                       0                
  6   256   # avr2.simpleLagLim.K
  0       0                       0                       0                
  6   256   # avr2.simpleLagLim.T
  0       0                       0                       0                
  6   256   # avr2.simpleLagLim.y_start
  0       0                       0                       0                
  6   256   # avr2.simpleLagLim.outMax
  0       0                       0                       0                
  6   256   # avr2.simpleLagLim.outMin
  0       0                       0                       0                
  6  1280   # avr2.simpleLagLim.T_mod
  0       0                       0                       0                
  6   256   # oel.p
  0       0                       0                       0                
  6   256   # oel.q
  0       0                       0                       0                
  6   256   # oel.field_current.p
  0       0                       0                       0                
  6   256   # oel.field_current.q
  0       0                       0                       0                
  6   256   # oel.field_current.ifield
  0       0                       0                       0                
  6   256   # oel.field_current.xd
  0       0                       0                       0                
  6   256   # oel.field_current.xq
  0       0                       0                       0                
  6  1280   # oel.field_current.gamma_p
  0       0                       0                       0                
  6  1280   # oel.field_current.gamma_q
 -1      10                       0                       0                
  1   280   # oel.T0
  0       0                       0                       0                
  6   256   # oel.xd
  0       0                       0                       0                
  6   256   # oel.xq
 -1  2.8250000000000002E+00       0                       0                
  1   280   # oel.if_lim
 -1       1                       0                       0                
  1   280   # oel.vOEL_max
  0       0                       0                       0                
  6   256   # oel.Sn
  0       0                       0                       0                
  6   256   # oel.Vn
  0       0                       0                       0                
  6   256   # oel.V_b
  0       0                       0                       0                
  6  1280   # oel.Z_MBtoSB
  0       0                       0                       0                
  6  1280   # oel.I_MBtoSB
  0       0                       0                       0                
  6   256   # oel.add.y
  0       1                       0                       0                
  6   256   # oel.currentLimit.k
  0       0                       0                       0                
  6   256   # oel.limIntegrator.k
  0       1                       0                       0                
  6   256   # oel.limIntegrator.outMax
 -1       0                       0                       0                
  1   280   # oel.limIntegrator.outMin
  0       3                       1                       4                
  6   258   # oel.limIntegrator.initType
  0       1                       0                       0                
  6   257   # oel.limIntegrator.limitsAtInit
 -1       0                       0                       0                
  1   280   # oel.limIntegrator.y_start
  0       1                       0                       0                
  6   257   # oel.limIntegrator.strict
 -1       0                       0                       0                
  2   272   # oel.limIntegrator.y
  0       0                       0                       0                
  3   256   # oel.limIntegrator.der(y)
  0       0                       0                       0                
  6   256   # tGTypeI.pm
 -1       1                       0                       0                
  1   280   # tGTypeI.wref
  0       0                       0                       0                
  6   256   # tGTypeI.pref
 -1  4.0000000000000001E-02       0                       0                
  1   280   # tGTypeI.R
  0       1                       0                       0                
  6   256   # tGTypeI.pmax
  0       0                       0                       0                
  6   256   # tGTypeI.pmin
 -1  1.0000000000000001E-01       0                       0                
  1   280   # tGTypeI.Ts
 -1  4.0000000000000002E-01       0                       0                
  1   280   # tGTypeI.Tc
 -1       0                       0                       0                
  1   280   # tGTypeI.T3
 -1  2.3300000000000001E+00       0                       0                
  1   280   # tGTypeI.T4
 -1       4                       0                       0                
  1   280   # tGTypeI.T5
  0       0                       0                       0                
  6   256   # tGTypeI.pin
  0       0                       0                       0                
  6  1280   # tGTypeI.pin0
  0       0                       0                       0                
  6  1280   # tGTypeI.xg10
  0       0                       0                       0                
  6  1280   # tGTypeI.xg20
  0       0                       0                       0                
  6  1280   # tGTypeI.xg30
  0       0                       0                       0                
  6  1280   # tGTypeI.pinstar
 -1       0                       0                       0                
  2  1296   # tGTypeI.xg1
  0       0                       0                       0                
  3  1280   # tGTypeI.der(xg1)
 -1       0                       0                       0                
  2  1296   # tGTypeI.xg2
  0       0                       0                       0                
  3  1280   # tGTypeI.der(xg2)
 -1       0                       0                       0                
  2  1296   # tGTypeI.xg3
  0       0                       0                       0                
  3  1280   # tGTypeI.der(xg3)
  0       0                       0                       0                
  6   256   # p0
  0       0                       0                       0                
  6   256   # order6_1.V_b
  0       0                       0                       0                
  6   256   # order6_1.V_0
  0       0                       0                       0                
  6   256   # order6_1.angle_0
  0       0                       0                       0                
  6   256   # order6_1.P_0
  0       0                       0                       0                
  6   256   # order6_1.Q_0
  0       0                       0                       0                
  6   256   # order6_1.S_b
  0       0                       0                       0                
  6   256   # order6_1.fn
  0       0                       0                       0                
  6   256   # order6_1.Sn
  0       0                       0                       0                
  6   256   # order6_1.Vn
 -1       0                       0                       0                
  1   280   # order6_1.ra
 -1  1.2391304350000001E+00       0                       0                
  1   280   # order6_1.x1d
 -1  5.0660999999999996E+00       0                       0                
  1   280   # order6_1.M
  0       0                       0                       0                
  6   256   # order6_1.D
  0       0                       0                       0                
  6   388   # order6_1.p.ir
  0       0                       0                       0                
  6   388   # order6_1.p.ii
 -1       0                       0                       0                
  2   272   # order6_1.delta
  0       0                       0                       0                
  3   256   # order6_1.der(delta)
 -1       1                       0                       0                
  2   272   # order6_1.w
  0       0                       0                       0                
  3   256   # order6_1.der(w)
  0       0                       0                       0                
  6   256   # order6_1.P
  0       0                       0                       0                
  6   256   # order6_1.Q
  0       0                       0                       0                
  6   256   # order6_1.anglev
  0       0                       0                       0                
  6   256   # order6_1.vd
  0       0                       0                       0                
  6   256   # order6_1.vq
  0       0                       0                       0                
  6   256   # order6_1.id
  0       0                       0                       0                
  6   256   # order6_1.iq
  0       0                       0                       0                
  6  1280   # order6_1.pe
  0       0                       0                       0                
  6  1280   # order6_1.vf_MB
  0       0                       0                       0                
  6  1280   # order6_1.w_b
  0       0                       0                       0                
  6  1280   # order6_1.S_SBtoMB
  0       0                       0                       0                
  6  1280   # order6_1.I_MBtoSB
  0       0                       0                       0                
  6  1280   # order6_1.V_MBtoSB
  0       0                       0                       0                
  6  1280   # order6_1.Z_MBtoSB
  0       0                       0                       0                
  6  1280   # order6_1.p0
  0       0                       0                       0                
  6  1280   # order6_1.q0
  0       0                       0                       0                
  6  1280   # order6_1.Vt0.re
  0       0                       0                       0                
  6  1280   # order6_1.Vt0.im
  0       0                       0                       0                
  6  1280   # order6_1.S0.re
  0       0                       0                       0                
  6  1280   # order6_1.S0.im
  0       0                       0                       0                
  6  1280   # order6_1.I0.re
  0       0                       0                       0                
  6  1280   # order6_1.I0.im
  0       0                       0                       0                
  6  1280   # order6_1.vr0
  0       0                       0                       0                
  6  1280   # order6_1.vi0
  0       0                       0                       0                
  6  1280   # order6_1.ir0
  0       0                       0                       0                
  6  1280   # order6_1.ii0
  0       0                       0                       0                
  6  1280   # order6_1.xq0
  0       0                       0                       0                
  6  1280   # order6_1.delta0
  0       0                       0                       0                
  6  1280   # order6_1.Vdq0.re
  0       0                       0                       0                
  6  1280   # order6_1.Vdq0.im
  0       0                       0                       0                
  6  1280   # order6_1.Idq0.re
  0       0                       0                       0                
  6  1280   # order6_1.Idq0.im
  0       0                       0                       0                
  6  1280   # order6_1.vd0
  0       0                       0                       0                
  6  1280   # order6_1.vq0
  0       0                       0                       0                
  6  1280   # order6_1.id0
  0       0                       0                       0                
  6  1280   # order6_1.iq0
  0       0                       0                       0                
  6  1280   # order6_1.pm00
 -1  4.0760869570000002E+00       0                       0                
  1   280   # order6_1.xd
 -1  2.6902173910000000E+00       0                       0                
  1   280   # order6_1.xq
 -1  5.0000000000000000E-01       0                       0                
  1   280   # order6_1.x1q
 -1  1.0108695649999999E+00       0                       0                
  1   280   # order6_1.x2d
 -1  9.4565173899999999E-01       0                       0                
  1   280   # order6_1.x2q
 -1  3.0666666660000002E+00       0                       0                
  1   280   # order6_1.T1d0
 -1       2                       0                       0                
  1   280   # order6_1.T1q0
 -1  4.2933300000000001E-02       0                       0                
  1   280   # order6_1.T2d0
 -1  5.5199999999999999E-02       0                       0                
  1   280   # order6_1.T2q0
 -1  1.2266600000000001E-03       0                       0                
  1   280   # order6_1.Taa
 -1       0                       0                       0                
  2   272   # order6_1.e1q
  0       0                       0                       0                
  3   256   # order6_1.der(e1q)
 -1       0                       0                       0                
  2   272   # order6_1.e1d
  0       0                       0                       0                
  3   256   # order6_1.der(e1d)
 -1       0                       0                       0                
  2   272   # order6_1.e2q
  0       0                       0                       0                
  3   256   # order6_1.der(e2q)
 -1       0                       0                       0                
  2   272   # order6_1.e2d
  0       0                       0                       0                
  3   256   # order6_1.der(e2d)
  0       0                       0                       0                
  6  1280   # order6_1.e2q0
  0       0                       0                       0                
  6  1280   # order6_1.e2d0
  0       0                       0                       0                
  6  1280   # order6_1.e1d0
  0       0                       0                       0                
  6  1280   # order6_1.K1
  0       0                       0                       0                
  6  1280   # order6_1.K2
  0       0                       0                       0                
  6  1280   # order6_1.e1q0
  0       0                       0                       0                
  6  1280   # order6_1.vf00


# Matrix with 6 columns defining the initial value calculation
# (columns 5 and 6 are not utilized for the calculation but are
#  reported by dymosim via dymosim -i for user convenience):
#
# column 1: Type of initial value
#           = -2: special case: for continuing simulation (column 2 = value)
#           = -1: fixed value (column 2 = fixed value)
#           =  0: free value, i.e., no restriction (column 2 = initial value)
#           >  0: desired value (column 1 = weight for optimization
#                                column 2 = desired value)
#                 use weight=1, since automatic scaling usually
#                 leads to equally weighted terms
# column 2: fixed, free or desired value according to column 1.
# column 3: Minimum value (ignored, if Minimum >= Maximum).
# column 4: Maximum value (ignored, if Minimum >= Maximum).
#           Minimum and maximum restrict the search range in initial
#           value calculation. They might also be used for scaling.
# column 5: Category of variable.
#           = 1: parameter.
#           = 2: state.
#           = 3: state derivative.
#           = 4: output.
#           = 5: input.
#           = 6: auxiliary variable.
# column 6: Data type of variable and flags according to dsBaseType
#  <value>&3= 0: real.
#  <value>&3= 1: boolean.
#  <value>&3= 2: integer.
#
# Initial values are calculated according to the following procedure:
#
# - If parameters, states and inputs are FIXED, and other variables
#   are FREE, no special action takes place (default setting).
#
# - If there are only FIXED and FREE variables and the number of
#   FREE parameters, states and inputs is IDENTICAL to the number of
#   FIXED state derivatives, outputs and auxiliary variables, a non-linear
#   equation is solved to determine a consistent set of initial conditions.
#
# - In all other cases the following optimization problem is solved:
#      min( sum( weight(i)*( (value(i) - DESIRED(i))/scale(i) )^2 ) )
#   under the constraint that the differential equation is fulfilled
#   at the initial time. In most cases weight(i)=1 is sufficient, due
#   to the automatic scaling (if DESIRED(i) is not close to zero,
#   scale(i) = DESIRED(i). Otherwise, the scaling is based on the
#   nominal value (and maybe minimum and maximum values given in 
#   column 3 and 4). If these values are zero, scale(i)=1 is used).
#
char initialDescription(214,127)
System base [MVA]
System Frequency [Hz]
Real part of the voltage [1]
Imaginary part of the voltage [1]
Real part of the current [1]
Imaginary part of the current [1]
Base voltage of the bus [kV]
Voltage magnitude (pu) [1]
Voltage angle [deg]
Active power [MW]
Reactive power [Mvar]
Machine base power (MVA) [MVA]
Generator termminal voltage (pu) [1]
Filed voltage (pu) [1]
Reference generator terminal voltage (pu) [1]
Minimum regulator voltage (pu) [1]
Maximum regulator voltage (pu) [1]
Amplifier gain (pu/pu) [s]
Amplifier time constant (s) [s]
Stabilizer gain (pu/pu) [1]
Stabilizer time constant (s) [s]
Field circuit integral deviation (pu/pu)
Field circuit time constant (s) [s]
Measurement time constant (s) [s]
1st ceiling coefficient
2nd ceiling coefficient
Initial measured voltage [1]
[1]
Initialization of vf [1]
Initialization [1]
Initialization [1]
Voltage reference at t=0 (pu) [1]
Reference generator terminal voltage (pu) [1]
[1]
[1]
[1]
Numerator coefficients of transfer function (e.g., 2*s+3 is specified as {2,3})
Denominator coefficients of transfer function (e.g., 5*s+6 is specified as {5,6}) [s]
Denominator coefficients of transfer function (e.g., 5*s+6 is specified as {5,6}) [s]
Type of initialization (1: no init, 2: steady state, 3: initial state, 4: initial output) [:#(type=Modelica.Blocks.Types.Init)]
Initial or guess values of states [1]
Initial value of output (derivatives of y are zero up to nx-1-th derivative) [1]
State of transfer function from controller canonical form [1]
Size of Denominator of transfer function. [:#(type=Integer)]
Size of Numerator of transfer function. [:#(type=Integer)]
[:#(type=Integer)]




Scaled vector x
der(Scaled vector x)
First ceiling coefficient
Second ceiling coefficient
Gains [1]
Time constants (T>0 required; T=0 is ideal derivative block) [s]
Type of initialization (1: no init, 2: steady state, 3: initial state, 4: initial output) [:#(type=Modelica.Blocks.Types.Init)]
Initial or guess value of state [1]
Initial value of output (= state) [s-1]
Connector of Real output signal [s-1]
State of block [1]
der(State of block) [s-1]
[:#(type=Boolean)]
[s-1]
Gain [1]
Time Constant [s]
Type of initialization (1: no init, 2: steady state, 3/4: initial output) [:#(type=Modelica.Blocks.Types.Init)]
Initial or guess value of output (= state) [1]
Connector of Real output signal [1]
der(Connector of Real output signal) [s-1]
Connector of Real input signal [s-1]
[1]
[s-1]
Gain [s]
Lag time constant [s]
Output start value [1]
Maximum output value [1]
Minimum output value [1]
[s]
Active power (pu) [1]
Reactive power (pu) [1]
active power (pu) [1]
reactive power (pu) [1]
estimated field current (pu) [1]
[1]
[1]
[1]
[1]
Integrator time constant (s) [s]
d-axis estimated generator reactance (pu, machine base) [1]
q-axis estimated generator reactance (pu, machine base) [1]
Maximum field current (pu, system base) [1]
Maximum output signal (pu, machine base) [1]
Power rating (MVA) [MVA]
Voltage rating (kV) [kV]
Base voltage of the bus (kV) [kV]
Z(machine base) -> Z(system base) [1]
I(machine base) -> I(system base) [1]
[1]
Constant output value [1]
Integrator gain [1]
Upper limit of output [1]
Lower limit of output
Type of initialization (1: no init, 2: steady state, 3/4: initial output) [:#(type=Modelica.Blocks.Types.Init)]
= false, if limits are ignored during initialization (i.e., der(y)=k*u) [:#(type=Boolean)]
Initial or guess value of output (must be in the limits outMin .. outMax) [1]
= true, if strict limits with noEvent(..) [:#(type=Boolean)]
Connector of Real output signal [1]
der(Connector of Real output signal) [s-1]
Mechanical power (pu) [1]
Speed reference (pu) [1]
Active power reference (pu) [1]
Droop (pu)
Maximum turbine output (pu) [1]
Minimum turbine output (pu) [1]
Governor time constant (s)
Servo time constant (s)
Transient gain time constant (s)
Power fraction time constant (s)
Reheat time constant (s)
Turbine output (pu) [1]
Initialization [1]
Initialization [1]
Initialization
Initialization [1]
[1]
[1]
[s-1]


[1]
[s-1]
[1]
Base voltage of the bus [kV]
Voltage magnitude (pu) [1]
Voltage angle [deg]
Active power [MW]
Reactive power [Mvar]
System base power [MVA]
System Frequeny [Hz]
Power rating (MVA) [MVA]
Voltage rating (kV) [kV]
Armature resistance (pu) [1]
d-axis transient reactance (pu) [1]
Mechanical starting time (2H), kWs/kVA
Damping coefficient
Real part of the current [1]
Imaginary part of the current [1]
Rotor angle (rad) [rad|rad]
der(Rotor angle (rad)) [rad/s]
Rotor speed (pu) [1]
der(Rotor speed (pu)) [s-1]
Active power (pu) [1]
Reactive power (pu) [1]
 Bus voltage angle (rad) [rad|deg]
d-axis voltage (pu) [1]
q-axis voltage (pu) [1]
d-axis currrent (pu) [1]
q-axis current (pu) [1]
electrical power transmitted through the air-gap [1]
field voltage on machine base [1]
Base frequency in rad/s [rad/s]
S(system base) -> S(machine base) [1]
I(machine base) -> I(system base) [1]
V(machine base) -> V(system base) [1]
Z(machine base) -> Z(system base) [1]
Initial active power generation in pu (system base) [1]
Initial reactive power generation in pu (system base) [1]
Real part of complex number
Imaginary part of complex number
Real part of complex number [1]
Imaginary part of complex number [1]
Real part of complex number
Imaginary part of complex number
Init. val. [1]
Init. val. [1]
Init. val. [1]
Init. val. [1]
used for setting the initial rotor angle [1]
Init. val. rotor angle [rad|deg]
Real part of complex number
Imaginary part of complex number
Real part of complex number
Imaginary part of complex number
Init. val. [1]
Init. val. [1]
Init. val. [1]
Init. val. [1]
Init. val. (pu, system base) [1]
d-axis synchronous reactance (pu) [1]
q-axis synchronous reactance (pu) [1]
q-axis transient reactance (pu) [1]
d-axis sub-transient reactance (pu) [1]
q-axis sub-transient reactance (pu) [1]
d-axis open circuit transient time constant (s)
q-axis open circuit transient time constant (s)
d-axis open circuit sub-transient time constant (s)
q-axis open circuit sub-transient time constant (s)
d-axis aditional leakage time constant (s)
q-axis transient voltage [1]
der(q-axis transient voltage) [s-1]
d-axis transient voltage [1]
der(d-axis transient voltage) [s-1]
q-axis sub-transient voltage [1]
der(q-axis sub-transient voltage) [s-1]
d-axis sub-transient voltage [1]
der(d-axis sub-transient voltage) [s-1]
Initialitation [1]
Initialitation [1]
[1]
[1]
[1]
[1]
Init. val. (pu, SB) [1]

